volumes:
  postgresdb_data:

services:
  postgres-grpc:
    image: postgres:16-alpine
    restart: always
    container_name: postgres-grpc
    environment:
      - POSTGRES_USER=${GRPC_POSTGRES_USER}
      - POSTGRES_PASSWORD=${GRPC_POSTGRES_PASSWORD}
      - POSTGRES_DB=${GRPC_POSTGRES_DB}
    volumes:
      - postgresdb_data:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    ports:
      - "8888:8080"
    depends_on:
      - postgres-grpc

  redis-grpc:
    image: redis:latest

    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass besthack

  rest-server:
    build:
      context: ./bestHack_support_REST_server
      args:
        REST_SERVER_ENV: ${REST_SERVER_ENV}
        REST_SERVER_GRPC_CLIENT_ADDRESS: ${REST_SERVER_GRPC_CLIENT_ADDRESS}
        REST_SERVER_GRPC_CLIENT_TIMEOUT: ${REST_SERVER_GRPC_CLIENT_TIMEOUT}
        REST_SERVER_GRPC_CLIENT_RETRIES_COUNT: ${REST_SERVER_GRPC_CLIENT_RETRIES_COUNT}
        REST_SERVER_GRPC_CLIENT_INSECURE: ${REST_SERVER_GRPC_CLIENT_INSECURE}
        REST_SERVER_HOST: ${REST_SERVER_HOST}
        REST_SERVER_PORT: ${REST_SERVER_PORT}
        REST_SERVER_ANALYTICS_URL: ${REST_SERVER_ANALYTICS_URL}
        REST_SERVER_TIMEOUT: ${REST_SERVER_TIMEOUT}
        REST_SERVER_IDLE_TIMEOUT: ${REST_SERVER_IDLE_TIMEOUT}
        REST_SERVER_ALLOW_ORIGIN: ${REST_SERVER_ALLOW_ORIGIN}
        REST_SERVER_APP_ID: ${REST_SERVER_APP_ID}
        REST_SERVER_LOGS_PATH_FILE: ${REST_SERVER_LOGS_PATH_FILE}
        REST_SERVER_PROMETHEUS_HOST: ${REST_SERVER_PROMETHEUS_HOST}
        REST_SERVER_PROMETHEUS_PORT: ${REST_SERVER_PROMETHEUS_PORT}
    environment:
      REST_SERVER_GRPC_CLIENT_ADDRESS: ${REST_SERVER_GRPC_CLIENT_ADDRESS}
      REST_SERVER_GRPC_CLIENT_TIMEOUT: ${REST_SERVER_GRPC_CLIENT_TIMEOUT}
      REST_SERVER_GRPC_CLIENT_RETRIES_COUNT: ${REST_SERVER_GRPC_CLIENT_RETRIES_COUNT}
      REST_SERVER_GRPC_CLIENT_INSECURE: ${REST_SERVER_GRPC_CLIENT_INSECURE}
      REST_SERVER_HOST: ${REST_SERVER_HOST}
      REST_SERVER_PORT: ${REST_SERVER_PORT}
      REST_SERVER_ANALYTICS_URL: ${REST_SERVER_ANALYTICS_URL}
      REST_SERVER_TIMEOUT: ${REST_SERVER_TIMEOUT}
      REST_SERVER_IDLE_TIMEOUT: ${REST_SERVER_IDLE_TIMEOUT}
      REST_SERVER_ALLOW_ORIGIN: ${REST_SERVER_ALLOW_ORIGIN}
      REST_SERVER_APP_ID: ${REST_SERVER_APP_ID}
      REST_SERVER_LOGS_PATH_FILE: ${REST_SERVER_LOGS_PATH_FILE}
      REST_SERVER_PROMETHEUS_HOST: ${REST_SERVER_PROMETHEUS_HOST}
      REST_SERVER_PROMETHEUS_PORT: ${REST_SERVER_PROMETHEUS_PORT}
    volumes:
      - ./bestHack_support_REST_server/logs:/app/logs
    ports:
      - "8081:8081"
      - "8082:8082"
    restart: always

  grpc-server:
    container_name: grpc-server
    build:
      context: ./bestHack_support_gRPC_server
      args:
        GRPC_SERVER_LOGS_PATH_FILE: ${GRPC_SERVER_LOGS_PATH_FILE}
        GRPC_SERVER_ENV: ${GRPC_SERVER_ENV}
        GRPC_SERVER_POSTGRES_URL: ${GRPC_SERVER_POSTGRES_URL}
        GRPC_SERVER_POSTGRES_AUTO_MIGRATE: ${GRPC_SERVER_POSTGRES_AUTO_MIGRATE}
        GRPC_SERVER_REDIS_ENDPOINT: ${GRPC_SERVER_REDIS_ENDPOINT}
        GRPC_SERVER_REDIS_PASSWORD: ${GRPC_SERVER_REDIS_PASSWORD}
        GRPC_SERVER_TOKEN_TTL: ${GRPC_SERVER_TOKEN_TTL}
        GRPC_SERVER_JWT_SECRET: ${GRPC_SERVER_JWT_SECRET}
        GRPC_SERVER_HOST: ${GRPC_SERVER_HOST}
        GRPC_SERVER_PORT: ${GRPC_SERVER_PORT}
        GRPC_SERVER_TIMEOUT: ${GRPC_SERVER_TIMEOUT}
        GRPC_SERVER_INPUT_FILE: ${GRPC_SERVER_INPUT_FILE}
        GRPC_SERVER_OUTPUT_FILE: ${GRPC_SERVER_OUTPUT_FILE}
    ports:
      - "44044:44044"
    volumes:
      - ./data:/app/data
      - ./bestHack_support_gRPC_server/logs:/app/logs
    environment:
      GRPC_SERVER_LOGS_PATH_FILE: ${GRPC_SERVER_LOGS_PATH_FILE}
      GRPC_SERVER_ENV: ${GRPC_SERVER_ENV}
      GRPC_SERVER_POSTGRES_URL: ${GRPC_SERVER_POSTGRES_URL}
      GRPC_SERVER_POSTGRES_AUTO_MIGRATE: ${GRPC_SERVER_POSTGRES_AUTO_MIGRATE}
      GRPC_SERVER_REDIS_ENDPOINT: ${GRPC_SERVER_REDIS_ENDPOINT}
      GRPC_SERVER_REDIS_PASSWORD: ${GRPC_SERVER_REDIS_PASSWORD}
      GRPC_SERVER_TOKEN_TTL: ${GRPC_SERVER_TOKEN_TTL}
      GRPC_SERVER_JWT_SECRET: ${GRPC_SERVER_JWT_SECRET}
      GRPC_SERVER_HOST: ${GRPC_SERVER_HOST}
      GRPC_SERVER_PORT: ${GRPC_SERVER_PORT}
      GRPC_SERVER_TIMEOUT: ${GRPC_SERVER_TIMEOUT} 
      GRPC_SERVER_INPUT_FILE: ${GRPC_SERVER_INPUT_FILE}
      GRPC_SERVER_OUTPUT_FILE: ${GRPC_SERVER_OUTPUT_FILE} 
      GRPC_SERVER_ANALYTICS_SERVICE_URL: ${GRPC_SERVER_ANALYTICS_SERVICE_URL}

    restart: always
    depends_on:
      - postgres-grpc
      - redis-grpc
  
  brawlers-front:
    build:
      context: ./TheBrawlers2.0
      args:
        VITE_SOCKET_WS_HOST: ${VITE_SOCKET_WS_HOST}
        VITE_REST_URL: ${VITE_REST_URL}
        VITE_APP_PORT: ${VITE_APP_PORT}
    ports:
      - "5173:5173"
    environment:
      VITE_SOCKET_WS_HOST: ${VITE_SOCKET_WS_HOST}
      VITE_REST_URL: ${VITE_REST_URL}
      VITE_APP_PORT: ${VITE_APP_PORT}
  
  python-cluster:
    container_name: py-cluster
    build:
      context: ./besthack-cluster
      args:
        PY_PORT: ${PY_PORT}
        PY_HOST: ${PY_HOST}
    ports:
      - "5000:5000"
    environment:
      PY_PORT: ${PY_PORT}
      PY_HOST: ${PY_HOST}
    volumes:
      - ./data:/app/data

  python-cluster-chart:
    container_name: py-cluster-chart
    build:
      context: ./cluster_chart
      args:
        PY_CHART_PORT: ${PY_CHART_PORT}
        PY_CHART_HOST: ${PY_CHART_HOST}
    ports:
      - "3001:3001"
    environment:
      PY_CHART_PORT: ${PY_CHART_PORT}
      PY_CHART_HOST: ${PY_CHART_HOST}
    volumes:
      - ./data:/app/data
  
  python-bot:
    container_name: py-bot
    build:
      context: ./bh-bot
      args:
        API_TOKEN: ${API_TOKEN}
        BOT_PORT: ${BOT_PORT}
        REST_HOST: ${REST_HOST}
    ports:
      - "3002:3002"
    environment:
      API_TOKEN: ${API_TOKEN}
      BOT_PORT: ${BOT_PORT}
      REST_HOST: ${REST_HOST}

  
